{"/home/travis/build/npmtest/node-npmtest-everyauth/test.js":"/* istanbul instrument in package npmtest_everyauth */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-everyauth/lib.npmtest_everyauth.js":"/* istanbul instrument in package npmtest_everyauth */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_everyauth = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_everyauth = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-everyauth/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-everyauth && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_everyauth */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_everyauth\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_everyauth.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_everyauth.rollup.js'] =\n            local.assetsDict['/assets.npmtest_everyauth.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_everyauth.__dirname + '/lib.npmtest_everyauth.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-everyauth/node_modules/everyauth/index.js":"var path = require('path');\nvar EventEmitter = require('events').EventEmitter;\nvar connect = require('connect');\nvar express = require('express');\nvar ExpressRouter = require('express/lib/router');\nvar __pause = connect.utils.pause;\nvar merge = require('./lib/utils').merge;\n\nvar everyauth = module.exports = {};\n\n\neveryauth.helpExpress = function () {\n  console.warn('everyauth.helpExpress is being deprecated. helpExpress is now automatically invoked when it detects express. So remove everyauth.helpExpress from your code');\n  return this;\n};\n\neveryauth.debug = false;\n\n// The connect middleware. e.g.,\n//     connect(\n//         ...\n//       , everyauth.middleware()\n//       , ...\n//     )\neveryauth.middleware = function (opts) {\n  opts = merge({\n    autoSetupRoutes: true\n  }, opts);\n  var userAlias = everyauth.expressHelperUserAlias || 'user';\n  var router = new ExpressRouter;\n\n  if (opts.autoSetupRoutes) {\n    var router = new ExpressRouter();\n    var modules = everyauth.enabled;\n    for (var _name in modules) {\n      var _module = modules[_name];\n      _module.validateSequences();\n      _module.routeApp(router);\n    }\n  }\n\n  return function (req, res, next) {\n    fetchUserFromSession(req, function (err) {\n      addRequestLocals(req, res, userAlias);\n      registerReqGettersAndMethods(req);\n      if (router) {\n        router._dispatch(req, res, next);\n      } else {\n        next();\n      }\n    });\n  }\n};\n\nfunction addRequestLocals (req, res, userAlias) {\n  if (res.locals) {\n    var session = req.session;\n    var auth = session && session.auth;\n    var everyauthLocal = merge(auth, {\n      loggedIn: !! (auth && auth.loggedIn)\n    , user: req.user\n    });\n\n    if (everyauth.enabled.password) {\n      // Add in access to loginFormFieldName() + passwordFormFieldName()\n      everyauthLocal.password || (everyauthLocal.password = {});\n      everyauthLocal.password.loginFormFieldName = everyauth.password.loginFormFieldName();\n      everyauthLocal.password.passwordFormFieldName = everyauth.password.passwordFormFieldName();\n    }\n    res.locals.everyauth = everyauthLocal;\n    res.locals[userAlias] = req.user;\n  }\n}\n\nfunction registerReqGettersAndMethods (req) {\n  var methods = everyauth._req._methods\n  var getters = everyauth._req._getters;\n  for (var name in methods) {\n    req[name] = methods[name];\n  }\n  for (name in getters) {\n    Object.defineProperty(req, name, {\n      get: getters[name]\n    });\n  }\n}\n\nfunction fetchUserFromSession (req, callback) {\n  var session = req.session\n  var auth = session && session.auth;\n  if (!auth || !auth.userId) return callback();\n  var everymodule = everyauth.everymodule;\n  var pause = __pause(req);\n\n  var findUserById_function = everymodule.findUserById();\n\n  findUserById_function.length === 3\n    ? findUserById_function( req, auth.userId, findUserById_callback )\n    : findUserById_function(      auth.userId, findUserById_callback );\n\n  function findUserById_callback (err, user) {\n    if (err) {\n      pause.resume();\n      return callback(err);\n    }\n    if (user) req.user = user;\n    else delete session.auth;\n    callback();\n    pause.resume();\n  }\n}\n\neveryauth._req = {\n    _methods: {}\n  , _getters: {}\n};\n\neveryauth.addRequestMethod = function (name, fn) {\n  this._req._methods[name] = fn;\n  return this;\n};\n\neveryauth.addRequestGetter = function (name, fn, isAsync) {\n  this._req._getters[name] = fn;\n  return this;\n};\n\neveryauth\n  .addRequestMethod('logout', function () {\n    var req = this;\n    delete req.session.auth;\n  })\n  .addRequestGetter('loggedIn', function () {\n    var req = this;\n    return !!(req.session && req.session.auth && req.session.auth.loggedIn);\n  });\n\neveryauth.modules = {};\neveryauth.enabled = {};\n\n// Grab all filenames in ./modules -- They correspond to the modules of the same name\n// as the filename (minus '.js')\nvar fs = require('fs');\nvar files = fs.readdirSync(__dirname + '/lib/modules').filter( function (file) {\n  return path.extname(file) === '.js';\n});\nvar includeModules = files.map( function (fname) {\n  return path.basename(fname, '.js');\n});\nfor (var i = 0, l = includeModules.length; i < l; i++) {\n  var name = includeModules[i];\n\n  // Lazy enabling of a module via `everyauth` getters\n  // i.e., the `facebook` module is not loaded into memory\n  // until `everyauth.facebook` is evaluated\n  Object.defineProperty(everyauth, name, {\n    get: (function (name) {\n      return function () {\n        var mod = this.modules[name] || (this.modules[name] = require('./lib/modules/' + name));\n        // Make `everyauth` accessible from each auth strategy module\n        if (!mod.everyauth) mod.everyauth = this;\n        if (mod.shouldSetup)\n          this.enabled[name] = mod;\n        return mod;\n      }\n    })(name)\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-everyauth/node_modules/everyauth/lib/utils.js":"var tls = require('tls');\n\nmodule.exports = {\n  clone: clone\n, extractHostname: extractHostname\n, merge: merge\n};\n\nfunction clone (obj) {\n  if (obj === undefined || obj === null)\n    return obj\n  if (Array.isArray(obj))\n    return cloneArray(obj);\n  if (obj.constructor == Object)\n    return cloneObject(obj);\n  return obj;\n}\n\nfunction cloneObject (obj, shouldMinimizeData) {\n  var ret = {};\n  for (var k in obj)\n    ret[k] = clone(obj[k]);\n  return ret;\n}\n\nfunction cloneArray (arr) {\n  var ret = [];\n  for (var i = 0, l = arr.length; i < l; i++)\n    ret.push(clone(arr[i]));\n  return ret;\n}\n\nfunction extractHostname (req) {\n  var headers = req.headers\n    , protocol = (req.connection.server instanceof tls.Server ||\n                 (req.headers['x-forwarded-proto'] && req.headers['x-forwarded-proto'].slice(0,5) === 'https'))\n               ? 'https://'\n               : 'http://'\n    , host = headers.host;\n  return protocol + host;\n}\n\nfunction merge () {\n  var mergeInto = {};\n  for (var i = 0, l = arguments.length, mergeFrom, k; i < l; i++) {\n    mergeFrom = arguments[i];\n    for (k in mergeFrom) {\n      mergeInto[k] = mergeFrom[k];\n    }\n  }\n  return mergeInto;\n}\n","/home/travis/build/npmtest/node-npmtest-everyauth/node_modules/everyauth/lib/promise.js":"var Promise = function (values) {\n  this._callbacks = [];\n  this._errbacks = [];\n  this._timebacks = [];\n  if (arguments.length > 0) {\n    this.fulfill.apply(this, values);\n  }\n};\n\nPromise.prototype.callback = function (fn, scope) {\n  if (this.values) {\n    fn.apply(scope, this.values);\n    return this;\n  }\n  this._callbacks.push([fn, scope]);\n  return this;\n};\n\nPromise.prototype.errback = function (fn, scope) {\n  if (this.err) {\n    fn.call(scope, this.err);\n    return this;\n  }\n  this._errbacks.push([fn, scope]);\n  return this;\n};\n\nPromise.prototype.timeback = function (fn, scope) {\n  if (this.timedOut) {\n    fn.call(scope);\n    return this;\n  }\n  this._timebacks.push([fn, scope]);\n  return this;\n};\n\nPromise.prototype.fulfill = function () {\n  if (this.isFulfilled || this.err || this.timedOut) return;\n  this.isFulfilled = true;\n  if (this._timeout) clearTimeout(this._timeout);\n  var callbacks = this._callbacks;\n  this.values = arguments;\n  for (var i = 0, l = callbacks.length; i < l; i++) {\n    callbacks[i][0].apply(callbacks[i][1], arguments);\n  }\n  return this;\n};\n\nPromise.prototype.fail = function (err) {\n  if (this._timeout) clearTimeout(this._timeout);\n  var errbacks = this._errbacks;\n  if ('string' === typeof err)\n    err = new Error(err);\n  this.err = err;\n  for (var i = 0, l = errbacks.length; i < l; i++) {\n    errbacks[i][0].call(errbacks[i][1], err);\n  }\n  return this;\n};\n\nPromise.prototype.timeout = function (ms) {\n  if (this.values || this.err) return this;\n  var timebacks = this._timebacks\n    , self = this;\n  if (ms === -1) return this;\n  this._timeout = setTimeout(function () {\n    self.timedOut = true;\n    for (var i = 0, l = timebacks.length; i < l; i++) {\n      timebacks[i][0].call(timebacks[i][1]);\n    }\n  },  ms);\n  return this;\n};\n\nvar ModulePromise = module.exports = function (_module, values) {\n  if (values)\n    Promise.call(this, values);\n  else\n    Promise.call(this);\n  this.module = _module;\n};\n\nModulePromise.prototype.__proto__ = Promise.prototype;\n\nModulePromise.prototype.breakTo = function (seqName) {\n  if (this._timeout) clearTimeout(this._timeout);\n\n  var args = Array.prototype.slice.call(arguments, 1);\n  var _module = this.module\n    , seq = _module._stepSequences[seqName];\n  if (_module.everyauth.debug)\n    console.log('breaking out to ' + seq.name);\n  seq = seq.materialize();\n  seq.start.apply(seq, args);\n  // TODO Garbage collect the abandoned sequence\n};\n","/home/travis/build/npmtest/node-npmtest-everyauth/node_modules/everyauth/lib/routeTriggeredSequence.js":"var StepSequence = require('./stepSequence');\n\nmodule.exports = RouteTriggeredSequence;\n\nfunction RouteTriggeredSequence (name, _module) {\n  StepSequence.call(this, name, _module);\n}\n\nrequire('util').inherits(RouteTriggeredSequence, StepSequence);\n\nRouteTriggeredSequence.prototype.routeHandler = function (req, res, next) {\n  // Create a shallow clone, so that seq.values are different per HTTP request\n  var seq = this.materialize();\n  // Kicks off a sequence of steps based on a route\n  seq.start(req, res, next); // BOOM!\n};\n","/home/travis/build/npmtest/node-npmtest-everyauth/node_modules/everyauth/lib/stepSequence.js":"var Promise = require('./promise');\nvar clone = require('./utils').clone;\n\nmodule.exports = StepSequence;\n\nfunction StepSequence (name, module) {\n  this.name = name;\n  this.module = module;\n  this.orderedStepNames = [];\n}\n\nStepSequence.prototype.isSeq = true;\n\n/**\n * Sets up the immediate or eventual output of priorPromise to pipe to the\n * nextStep's promise\n * @param {Promise} priorPromise\n * @param {Step} nextStep\n * @returns {Promise}\n */\nStepSequence.prototype._bind = function (priorPromise, nextStep) {\n  var nextPromise = new Promise();\n  var seq = this;\n\n  priorPromise.callback( function () {\n    var resultPromise = nextStep.exec(seq);\n    if (!resultPromise) return; // if we have a breakTo\n    resultPromise.callback( function () {\n      nextPromise.fulfill();\n    }); // TODO breakback?\n  });\n  return nextPromise;\n};\n\n/**\n * This kicks off a sequence of steps.\n * Creates a new chain of promises and exposes the leading promise\n * to the incoming (req, res) pair from the route handler\n */\nStepSequence.prototype.start = function () {\n  var steps = this.steps;\n\n  this._transposeArgs(arguments);\n\n  // Pipe through the steps\n  var priorStepPromise = steps[0].exec(this);\n\n  // If we have a breakTo\n  if (!priorStepPromise) return;\n\n  for (var i = 1, l = steps.length; i < l; i++) {\n    priorStepPromise = this._bind(priorStepPromise, steps[i]);\n  }\n  return priorStepPromise;\n};\n\n// Used for exposing the leading promise of a step promise chain to the\n// incoming args (e.g., [req, res] pair from the route handler)\nStepSequence.prototype._transposeArgs = function (args) {\n  var seq = this;\n  this.steps[0].accepts.forEach( function (paramName, i) {\n    // Map the incoming arguments to the named parameters \n    // that the first step is expected to accept.\n    seq.values[paramName] = args[i];\n  });\n};\n\nStepSequence.prototype.clone = function (submodule) {\n  var sequence = new (this.constructor)(this.name, submodule);\n  sequence.orderedStepNames = clone(this.orderedStepNames);\n  return sequence;\n};\n\nStepSequence.prototype._propertiesToMaterialize = ['isSeq', '_bind', 'start', '_transposeArgs'];\n\nStepSequence.prototype.materialize = function () {\n  var sequence = Object.create(this)\n    , materializedMethods = this._propertiesToMaterialize;\n  sequence.values = {};\n  for (var i = materializedMethods.length; i--;) {\n    var methodName = materializedMethods[i];\n    sequence[methodName] = this[methodName];\n  }\n  return sequence;\n};\n\n// TODO Replace logic here with newer introspection code\nStepSequence.prototype.validateSteps = function () {\n  var steps = this.steps\n    , step\n    , paramsToDate = []\n    , missingParams;\n  for (var i = 0, l = steps.length; i < l; i++) {\n    step = steps[i];\n    if ('undefined' === typeof step.accepts)\n      throw new Error('You did not declare accepts for the step: ' + step.name);\n    if ('undefined' === typeof step.promises)\n      throw new Error('You did not declare promises for the step: ' + step.name);\n\n    if (i === 0) \n      paramsToDate = paramsToDate.concat(step.accepts);\n\n    missingParams = step.accepts.filter( function (param) {\n      return paramsToDate.indexOf(param) === -1;\n    });\n\n    if (i > 0 && missingParams.length)\n      throw new Error('At step, ' + step.name + ', you are trying to access the parameters: ' +\n        missingParams.join(', ') + ' . However, only the following parameters have been ' +\n        'promised from prior steps thus far: ' + paramsToDate.join(', '));\n\n    paramsToDate = paramsToDate.concat(step.promises);\n\n    if ('undefined' === typeof this.module[step.name]())\n      // TODO Remove this Error, since invoking the arg to typeof (see line above)\n      //      already throws an Error\n      throw new Error('No one defined the function for the following step: ' + step.name + ' in the module ' + this.module.name);\n  }\n};\n\nObject.defineProperty(StepSequence.prototype, 'steps', {\n  get: function () {\n    // Compile the steps by pulling the step names from the module\n    var allSteps = this.module._steps\n      , orderedSteps = this.orderedStepNames.map( function (stepName) {\n          return allSteps[stepName];\n        })\n      , seq = this;\n\n    function compileSteps () {\n      var paramsToDate = []\n        , missingParams;\n\n      var steps = orderedSteps.map( function (step, i) {\n        var meta = { missing: [], step: step, missingParams: [], paramsToDate: {} };\n        if (! ('promises' in step)) {\n          meta.missing.push('promises');\n        }\n        if (! ('accepts' in step)) {\n          meta.missing.push('accepts');\n        }\n\n        if (('accepts' in step) && i === 0)\n          paramsToDate = paramsToDate.concat(step.accepts);\n\n        missingParams = !step.accepts ? [] : step.accepts.filter( function (param) {\n          return paramsToDate.indexOf(param) === -1;\n        });\n\n        if (step.promises)\n          paramsToDate = paramsToDate.concat(step.promises);\n\n        if (missingParams.length) {\n          meta.missingParams = missingParams;\n          meta.paramsToDate = paramsToDate;\n        }\n\n        if (! (('_' + step.name) in seq.module))\n          meta.missing.push('its function');\n\n        return meta;\n      });\n\n      return steps;\n    }\n\n    var compiledSteps;\n\n    Object.defineProperty(orderedSteps, 'incomplete', { get: function () {\n      compiledSteps || (compiledSteps = compileSteps());\n      return compiledSteps.filter( function (stepMeta) {\n        return stepMeta.missing.length > 0;\n      }).map( function (stepMeta) {\n        var error = 'is missing: ' + stepMeta.missing.join(', ');\n        return { name: stepMeta.step.name, error: error };\n      });\n    } });\n\n    Object.defineProperty(orderedSteps, 'invalid', { get: function () {\n      compiledSteps || (compiledSteps = compileSteps());\n      return compiledSteps.filter( function (stepMeta) {\n        return stepMeta.missingParams.length > 0;\n      }).map( function (stepMeta) {\n        var error = 'is trying to accept the parameters: ' + \n                  stepMeta.missingParams.join(', ') + \n                  ' . However, only the following parameters have ' + \n                  'been promised from prior steps thus far: ' + \n                  stepMeta.paramsToDate.join(', ');\n        return { name: stepMeta.step.name, error: error };\n      });\n    } });\n\n    return orderedSteps;\n  }\n});\n\nObject.defineProperty(StepSequence.prototype, 'debug', {\n  get: function () { return this.module.everyauth.debug; }\n});\n","/home/travis/build/npmtest/node-npmtest-everyauth/node_modules/everyauth/lib/step.js":"var Promise = require('./promise');\nvar clone = require('./utils').clone;\n\nmodule.exports = Step;\n\nfunction Step (name, _module) {\n  this.name = name;\n\n  // defineProperty; otherwise,\n  // clone will overflow when we clone a module\n  Object.defineProperty(this, 'module', { value: _module });\n}\n\n/**\n * @returns {Promise}\n */\nStep.prototype.exec = function (seq) {\n  var accepts = this.accepts;\n  var promises = this.promises;\n  var block = this.block;\n  var _module = this.module;\n  var stepName = this.name;\n  var step = this;\n  function errorCallback (error) {\n    // Ensure that seq.values are always passed back to moduleErrback\n    if (step.errback) {\n      step.errback(error, seq.values);\n    } else if (_module._moduleErrback) {\n      _module._moduleErrback(error, seq.values);\n    } else {\n      throw new Error('Missing module or step errback');\n    }\n  }\n\n\n  if (this.debug) {\n    console.log('starting step - ' + this.name);\n  }\n\n  var args = this._unwrapArgs(seq);\n\n  // There is a hidden last argument to every step function that\n  // is all the data promised by prior steps up to the step's point\n  // in time. We cannot anticipate everything a developer may want via\n  // `accepts(...)`. Therefore, just in case, we give the developer\n  // access to all data promised by prior steps via the last argument -- `seq.values`\n  args.push(seq.values);\n\n  var ret;\n  try {\n    // Apply the step logic\n\n    // Add _super access\n    _module._super = function () {\n      var step = this.__proto__._steps[stepName];\n      if (!step) return;\n      var superArgs = arguments.length ? arguments : args;\n      step.block.apply(this, superArgs);\n    };\n    ret = block.apply(_module, args);\n    delete _module._super;\n  } catch (breakTo) {\n    // Catch any sync breakTo's if any\n    if (breakTo.isSeq) {\n      if (this.module.everyauth.debug)\n        console.log(\"breaking out to \" + breakTo.name);\n      breakTo.start.apply(breakTo, breakTo.initialArgs);\n      // TODO Garbage collect the promise chain\n      return;\n    } else {\n      // Else, we have a regular exception\n      errorCallback(breakTo);\n    }\n  }\n\n  if (promises && promises.length &&\n        'undefined' === typeof ret) {\n    errorCallback(\n      new Error('Step ' + this.name + ' of `' + _module.name +\n        '` is promising: ' +  promises.join(', ') +\n        ' ; however, the step returns nothing. ' +\n        'Fix the step by returning the expected values OR ' +\n        'by returning a Promise that promises said values.')\n    );\n  }\n  // Convert return value into a Promise\n  // if it's not yet a Promise\n  ret = (ret instanceof Promise)\n      ? ret\n      : Array.isArray(ret)\n        ? promises.length === 1\n          ? this.module.Promise([ret])\n          : this.module.Promise(ret)\n        : this.module.Promise([ret]);\n\n  if (seq.debug) {\n    ret.callback( function () {\n      console.log('...finished step');\n    });\n  }\n\n  var convertErr = _module._convertErr;\n  if (convertErr) {\n    var oldErrback = ret.errback;\n    ret.errback = function (fn, scope) {\n      var oldFn = fn;\n      fn = function (err) {\n        if (err.constructor === Object) {\n          err = convertErr(err);\n        } else if ('string' === typeof err) {\n          err = new Error(err);\n        }\n        return oldFn.call(this, err);\n      };\n      return oldErrback.call(this, fn, scope);\n    };\n  }\n\n  ret.errback(errorCallback);\n\n  ret.callback( function () {\n    // Store the returned values\n    // in the sequence's state via seq.values\n    var returned = arguments\n      , vals = seq.values;\n    if (promises !== null) promises.forEach( function (valName, i) {\n      vals[valName] = returned[i];\n    });\n  });\n\n  ret.timeback( function () {\n    ret.fail(new Error('Step ' + stepName + ' of `' + _module.name + '` module timed out.'));\n  });\n\n  var timeoutMs = this.timeout || _module.moduleTimeout();\n  ret.timeout(timeoutMs);\n\n  return ret;\n};\n\n/**\n * Unwraps values (from the sequence) based on\n * the step's this.accepts spec.\n */\nStep.prototype._unwrapArgs = function (seq) {\n  return this.accepts.reduce( function (args, accept) {\n    args.push(seq.values[accept]);\n    return args;\n  }, []);\n};\n\nStep.prototype.clone = function (name, _module) {\n  var step = new Step(name, _module);\n  step.accepts = clone(this.accepts);\n  step.promises = clone(this.promises);\n  step.description = this.description;\n  step.timeout = this.timeout;\n  step.errback = this.errback;\n  return step;\n};\n\nObject.defineProperty(Step.prototype, 'block', {\n  get: function () {\n    return this._block || (this._block = this.module[this.name]());\n  }\n});\n\nObject.defineProperty(Step.prototype, 'debug', {\n  get: function () {\n    return this.module.everyauth.debug;\n  }\n});\n"}